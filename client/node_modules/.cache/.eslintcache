[{"/Users/devante/personalProjects/seeds/seed/client/src/index.js":"1","/Users/devante/personalProjects/seeds/seed/client/src/App.js":"2","/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js":"3","/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js":"4","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js":"5","/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js":"6","/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js":"7","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js":"8","/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js":"9","/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js":"10","/Users/devante/personalProjects/seeds/seed/client/src/components/Footer/index.js":"11","/Users/devante/personalProjects/seeds/seed/client/src/components/AuthContext.js":"12","/Users/devante/personalProjects/seeds/seed/client/src/components/firebase.js":"13","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Profile.js":"14","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Login.js":"15","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Signup.js":"16","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/PrivateRoute.js":"17","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/ForgotPassword.js":"18","/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/UpdateProfile.js":"19","/Users/devante/personalProjects/seeds/seed/client/src/components/Header-div/index.js":"20"},{"size":418,"mtime":1621303446330,"results":"21","hashOfConfig":"22"},{"size":1217,"mtime":1621826746136,"results":"23","hashOfConfig":"22"},{"size":940,"mtime":1621827658464,"results":"24","hashOfConfig":"22"},{"size":4101,"mtime":1620860415722,"results":"25","hashOfConfig":"22"},{"size":1980,"mtime":1621301983013,"results":"26","hashOfConfig":"22"},{"size":1191,"mtime":1621285713758,"results":"27","hashOfConfig":"22"},{"size":1635,"mtime":1621304370426,"results":"28","hashOfConfig":"22"},{"size":1534,"mtime":1620864054582,"results":"29","hashOfConfig":"22"},{"size":239,"mtime":1620859156035,"results":"30","hashOfConfig":"22"},{"size":481,"mtime":1620772154301,"results":"31","hashOfConfig":"22"},{"size":1657,"mtime":1620786593029,"results":"32","hashOfConfig":"22"},{"size":1278,"mtime":1621826713587,"results":"33","hashOfConfig":"22"},{"size":470,"mtime":1621826689268,"results":"34","hashOfConfig":"22"},{"size":1083,"mtime":1621304006868,"results":"35","hashOfConfig":"22"},{"size":1759,"mtime":1621303974036,"results":"36","hashOfConfig":"22"},{"size":2034,"mtime":1621304064269,"results":"37","hashOfConfig":"22"},{"size":434,"mtime":1621303991047,"results":"38","hashOfConfig":"22"},{"size":1679,"mtime":1621302657416,"results":"39","hashOfConfig":"22"},{"size":2620,"mtime":1621304085814,"results":"40","hashOfConfig":"22"},{"size":253,"mtime":1621828359407,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"a0hpeo",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devante/personalProjects/seeds/seed/client/src/index.js",[],["86","87"],"/Users/devante/personalProjects/seeds/seed/client/src/App.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js",["88","89","90"],"/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js",["91"],"import React, { useRef, useState } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport API from \"../../utils/API\";\nimport { ADD_POST, LOADING } from \"../../utils/actions\";\nimport {Container, Button, Form } from 'react-bootstrap';\n\n\n\n  const TheForm = () => {\n\n  const userRef = useRef();\n  const plantNameRef = useRef();\n  const locationRef = useRef();\n  const costRef = useRef();\n  const descriptionRef = useRef();\n  const [state, dispatch] = useStoreContext();\n  const fileInput = useRef(null);\n\n  const [photoState, setPhotoState] = useState()\n\n\n\n\n  const handleImageUpload = event => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append('image', fileInput.current.files[0]);\n  \n    const postImage = async () => {\n      try {\n        const res = await fetch('/api/photo-upload', {\n          mode: 'cors',\n          method: 'POST',\n          body: data\n        })\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setPhotoState({...photoState, image: postResponse.Location})\n        console.log(\"postImage: \", postResponse.Location)\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n\n      const handleSubmit = async e => {\n        e.preventDefault();\n    \n        dispatch({ type: LOADING });\n    \n        try {\n          const response = await API.savePost({\n            username: userRef.current.value,\n            plantName: plantNameRef.current.value,\n            location: locationRef.current.value,\n            cost: costRef.current.value,\n            description: descriptionRef.current.value\n          });\n    \n          dispatch({type: ADD_POST, post: response.data});\n    \n          // Clear out form\n          userRef.current.value = \"\";\n          plantNameRef.current.value = \"\";\n          locationRef.current.value = \"\";\n          costRef.current.value = \"\";\n          descriptionRef.current.value = \"\"\n        } catch(error) {\n          console.log(error);\n        }\n    \n      };\n\n\n\n    return (\n      <Container>\n                <Form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleSubmit}>\n        <Form.Group >\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n            required\n            ref = {userRef}\n            placeholder = \"GreenTree7\"\n            />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant Name</Form.Label>\n            <Form.Control \n            required\n            ref = {plantNameRef}\n            placeholder=\"Eastern Redbud\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n            required\n            ref = {locationRef}\n            placeholder=\"Austin\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant/Seed Cost</Form.Label>\n            <Form.Control\n            required\n            ref = {costRef}\n            placeholder=\"$5\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n            required\n            ref = {descriptionRef}\n            placeholder=\"Describe your plant\"\n             />\n            \n        </Form.Group>\n        \n        <Form.Group>\n        <label className=\"form-input col-12  p-1\">\n            Add an image of your plant: \n            <input\n              type=\"file\"\n              ref={fileInput}\n              className=\"form-input p-2\"\n            />\n            <button \n              className=\"btn\" \n              onClick={handleImageUpload} \n              type=\"submit\"\n            >\n              Upload\n            </button>\n          </label>\n        </Form.Group>\n\n        \n        <Button className=\"btn-success\" type=\"submit\" >\n            Submit\n        </Button >\n        </Form>\n      </Container>\n        \n    )\n}\nexport default TheForm\n","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js",["92","93"],"import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport API from \"../../utils/API\";\nimport {Card, Container, Row } from 'react-bootstrap'\nimport {useStoreContext} from \"../../utils/GlobalState\"\nimport {GET_POSTS } from \"../../utils/actions\";\nimport \"./index.css\"\n\n\nconst PostsGrid = () => {\n  const [state, dispatch] = useStoreContext();\n\n  // const removePost = id => {\n  //   API.deletePost(id)\n  //     .then(() => {\n  //       dispatch({\n  //         type: REMOVE_POST,\n  //         _id: id\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  const getPosts = async () => {\n    try {\n      const response = await API.getPosts();\n\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n\n    return (\n      <Container>\n        <Row>\n          {state.posts.map(post => (\n            <Card xl = {6} key={post._id}>\n              <Card.Img variant=\"top\" src = {post.image}></Card.Img>\n              <Card.Body>\n                <Card.Title>{post.plantName}</Card.Title>\n                <p>Posted on: {post.date}</p>\n                <p>Posted by: {post.username}</p>\n                <p>Location: {post.location}</p>\n                <p>${post.cost}</p>\n                  <Card.Text>Description: {post.description} </Card.Text>\n\n                  </Card.Body>\n                  \n                \n                \n                \n            </Card>\n          ))}\n        </Row>\n        \n      </Container>\n\n    )\n  }\n\n\nexport default PostsGrid\n","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js",["94"],"import axios from \"axios\";\n\nexport default {\n  // Gets all posts\n  getPosts: function() {\n    return axios.get(\"/api/posts\");\n  },\n  // Gets the post with the given id\n  getPost: function(id) {\n    return axios.get(\"/api/posts/\" + id);\n  },\n  // Deletes the post with the given id\n  deletePost: function(id) {\n    return axios.delete(\"/api/posts/\" + id);\n  },\n  // Saves a post to the database\n  savePost: function(postData) {\n    return axios.post(\"/api/posts\", postData);\n  }\n};\n","/Users/devante/personalProjects/seeds/seed/client/src/components/Footer/index.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/AuthContext.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/firebase.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Profile.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Login.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/Signup.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/PrivateRoute.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/ForgotPassword.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/FirebaseAuth/UpdateProfile.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/Header-div/index.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"104","line":7,"column":19,"nodeType":"101","messageId":"102","endLine":7,"endColumn":28},{"ruleId":"99","severity":1,"message":"105","line":16,"column":10,"nodeType":"101","messageId":"102","endLine":16,"endColumn":15},{"ruleId":"99","severity":1,"message":"106","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":40,"column":6,"nodeType":"109","endLine":40,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":1,"nodeType":"113","endLine":20,"endColumn":3},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'state' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["116"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [getPosts]",{"range":"119","text":"120"},[878,880],"[getPosts]"]