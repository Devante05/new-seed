[{"/Users/devante/personalProjects/seeds/seed/client/src/index.js":"1","/Users/devante/personalProjects/seeds/seed/client/src/App.js":"2","/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js":"3","/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js":"4","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js":"5","/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js":"6","/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js":"7","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js":"8","/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js":"9","/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js":"10","/Users/devante/personalProjects/seeds/seed/client/src/components/Footer/index.js":"11"},{"size":406,"mtime":1619371101830,"results":"12","hashOfConfig":"13"},{"size":560,"mtime":1620428763013,"results":"14","hashOfConfig":"13"},{"size":862,"mtime":1620785824774,"results":"15","hashOfConfig":"13"},{"size":4179,"mtime":1620778533725,"results":"16","hashOfConfig":"13"},{"size":1990,"mtime":1620778795533,"results":"17","hashOfConfig":"13"},{"size":1144,"mtime":1619560728845,"results":"18","hashOfConfig":"13"},{"size":1592,"mtime":1620778466469,"results":"19","hashOfConfig":"13"},{"size":1520,"mtime":1620510356833,"results":"20","hashOfConfig":"13"},{"size":203,"mtime":1620510401959,"results":"21","hashOfConfig":"13"},{"size":481,"mtime":1620772154301,"results":"22","hashOfConfig":"13"},{"size":1657,"mtime":1620786593029,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"a0hpeo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devante/personalProjects/seeds/seed/client/src/index.js",[],["51","52"],"/Users/devante/personalProjects/seeds/seed/client/src/App.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js",["53","54","55"],"/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js",["56"],"import React, { useRef } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport API from \"../../utils/API\";\nimport { ADD_POST, LOADING } from \"../../utils/actions\";\nimport {Container, Button, Form } from 'react-bootstrap';\n\n\n\n  const TheForm = () => {\n\n  const userRef = useRef();\n  const plantNameRef = useRef();\n  const locationRef = useRef();\n  const costRef = useRef();\n  const descriptionRef = useRef();\n  const [state, dispatch] = useStoreContext();\n  const fileInput = useRef(null);\n\n\n      // const handleImageUpload = event => {\n      //   event.preventDefault();\n      //   const data = new FormData();\n      //   data.append('image', fileInput.current.files[0]);\n      \n      //   const postImage = async () => {\n      //     try {\n      //       const res = await fetch('/api/file-upload', {\n      //         mode: 'cors',\n      //         method: 'POST',\n      //         body: data\n      //       })\n      //       if (!res.ok) throw new Error(res.statusText);\n      //       const postResponse = await res.json();\n      //       setFormState({...formState, image: postResponse.Location})\n      //       console.log(\"postImage: \", postResponse.Location)\n      //       return postResponse.Location;\n      //     } catch (error) {\n      //       console.log(error);\n      //     }\n      //   };\n      //   postImage();\n      // };\n\n      const handleSubmit = async e => {\n        e.preventDefault();\n    \n        dispatch({ type: LOADING });\n    \n        try {\n          const response = await API.savePost({\n            username: userRef.current.value,\n            plantName: plantNameRef.current.value,\n            location: locationRef.current.value,\n            cost: costRef.current.value,\n            description: descriptionRef.current.value\n          });\n    \n          dispatch({type: ADD_POST, post: response.data});\n    \n          // Clear out form\n          userRef.current.value = \"\";\n          plantNameRef.current.value = \"\";\n          locationRef.current.value = \"\";\n          costRef.current.value = \"\";\n          descriptionRef.current.value = \"\"\n        } catch(error) {\n          console.log(error);\n        }\n    \n      };\n\n\n\n    return (\n      <Container>\n                <Form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleSubmit}>\n        <Form.Group >\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n            required\n            ref = {userRef}\n            placeholder = \"GreenTree7\"\n            />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant Name</Form.Label>\n            <Form.Control \n            required\n            ref = {plantNameRef}\n            placeholder=\"Eastern Redbud\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n            required\n            ref = {locationRef}\n            placeholder=\"Austin\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant/Seed Cost</Form.Label>\n            <Form.Control\n            required\n            ref = {costRef}\n            placeholder=\"$5\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n            required\n            ref = {descriptionRef}\n            placeholder=\"Describe your plant\"\n             />\n            \n        </Form.Group>\n        \n        <Form.Group>\n        <label className=\"form-input col-12  p-1\">\n            Add an image of your plant: \n            <input\n              type=\"file\"\n              ref={fileInput}\n              className=\"form-input p-2\"\n            />\n            <button \n              className=\"btn\" \n              // onClick={} \n              type=\"submit\"\n            >\n              Upload\n            </button>\n          </label>\n        </Form.Group>\n\n        \n        <Button className=\"btn-success\" type=\"submit\" >\n            Submit\n        </Button >\n        </Form>\n      </Container>\n        \n    )\n}\nexport default TheForm\n","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js",["57"],"import React from 'react'\nimport { Jumbotron, Container, Carousel } from 'react-bootstrap';\nimport \"./index.css\"\n\n\nconst TheJumbotron = () => {\n    return (\n      <Container fluid>\n      <Carousel>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant1.jpg\"\n          alt=\"First slide\"\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant2.jpg\"\n          alt=\"Second slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Second slide label</h3>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant3.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant4.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant5.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n    </Container>\n    )\n}\n\nexport default TheJumbotron","/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js",["58","59","60"],"import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport API from \"../../utils/API\";\nimport {Container, ListGroup } from 'react-bootstrap'\nimport {useStoreContext} from \"../../utils/GlobalState\"\nimport {GET_POSTS, REMOVE_POST} from \"../../utils/actions\";\nimport \"./index.css\"\n\n\nconst PostsGrid = () => {\n  const [state, dispatch] = useStoreContext();\n\n  // const removePost = id => {\n  //   API.deletePost(id)\n  //     .then(() => {\n  //       dispatch({\n  //         type: REMOVE_POST,\n  //         _id: id\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  const getPosts = async () => {\n    try {\n      const response = await API.getPosts();\n\n      dispatch({\n        type: GET_POSTS,\n        posts: response.data\n      });\n\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n\n    return (\n      <Container>\n        <ListGroup>\n          {state.posts.map(post => (\n            <ListGroup.Item key={post._id}>\n              <strong>\n                <ol>\n                  <li>Posted on: {post.date} </li>\n                  <li>Plant/Seed Name: {post.plantName} </li>\n                  <li>Posted by: {post.username} </li>\n                  <li>Location: {post.location} </li>\n                  <li>${post.cost} </li>\n                  <li>Description: {post.description} </li>\n                </ol>\n                </strong>\n                \n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        \n      </Container>\n\n    )\n  }\n\n\nexport default PostsGrid\n","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js",["61"],"import axios from \"axios\";\n\nexport default {\n  // Gets all posts\n  getPosts: function() {\n    return axios.get(\"/api/posts\");\n  },\n  // Gets the post with the given id\n  getPost: function(id) {\n    return axios.get(\"/api/posts/\" + id);\n  },\n  // Deletes the post with the given id\n  deletePost: function(id) {\n    return axios.delete(\"/api/posts/\" + id);\n  },\n  // Saves a post to the database\n  savePost: function(postData) {\n    return axios.post(\"/api/posts\", postData);\n  }\n};\n","/Users/devante/personalProjects/seeds/seed/client/src/components/Footer/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"71","line":7,"column":19,"nodeType":"68","messageId":"69","endLine":7,"endColumn":28},{"ruleId":"66","severity":1,"message":"72","line":16,"column":10,"nodeType":"68","messageId":"69","endLine":16,"endColumn":15},{"ruleId":"66","severity":1,"message":"73","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":19},{"ruleId":"66","severity":1,"message":"74","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"75","line":6,"column":20,"nodeType":"68","messageId":"69","endLine":6,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":40,"column":6,"nodeType":"78","endLine":40,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":1,"nodeType":"82","endLine":20,"endColumn":3},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'state' is assigned a value but never used.","'Jumbotron' is defined but never used.","'Link' is defined but never used.","'REMOVE_POST' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["85"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getPosts]",{"range":"88","text":"89"},[890,892],"[getPosts]"]