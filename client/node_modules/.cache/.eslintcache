[{"/Users/devante/personalProjects/seeds/seed/client/src/index.js":"1","/Users/devante/personalProjects/seeds/seed/client/src/App.js":"2","/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js":"3","/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js":"4","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js":"5","/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js":"6","/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js":"7","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js":"8","/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js":"9","/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js":"10"},{"size":406,"mtime":1619371101830,"results":"11","hashOfConfig":"12"},{"size":560,"mtime":1620428763013,"results":"13","hashOfConfig":"12"},{"size":802,"mtime":1620433083237,"results":"14","hashOfConfig":"12"},{"size":4570,"mtime":1620433403479,"results":"15","hashOfConfig":"12"},{"size":1990,"mtime":1620431757066,"results":"16","hashOfConfig":"12"},{"size":1144,"mtime":1619560728845,"results":"17","hashOfConfig":"12"},{"size":1299,"mtime":1620494264226,"results":"18","hashOfConfig":"12"},{"size":1867,"mtime":1620429136379,"results":"19","hashOfConfig":"12"},{"size":355,"mtime":1620425049474,"results":"20","hashOfConfig":"12"},{"size":481,"mtime":1620433345993,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"a0hpeo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/devante/personalProjects/seeds/seed/client/src/index.js",[],["48","49"],"/Users/devante/personalProjects/seeds/seed/client/src/App.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/pages/Home/index.js",["50","51","52"],"import React, { useState, useEffect } from 'react';\nimport TheJumbotron from \"../../components/TheJumbotron\"\nimport Header from \"../../components/Header\"\nimport PostsGrid from \"../../components/PostsGrid\"\nimport TheForm from \"../../components/TheForm/index\"\nimport {Col, Row, Container} from 'react-bootstrap'\nimport \"./index.css\"\n\nconst Home = () => {\n\n\n    return (\n        <div>\n            <Header/>\n            <TheJumbotron/>\n            \n            <Row className = \"rowDiv\">\n              <Col lg = {3}>\n              <TheForm/>\n              </Col>\n              <Col>\n              <div className={`col-12 mb-3 `}>\n              <PostsGrid  title=\"plant posts\" />\n\n        </div>\n              </Col>\n\n            </Row>\n            \n            \n        </div>\n    )\n}\n\nexport default Home;","/Users/devante/personalProjects/seeds/seed/client/src/components/TheForm/index.js",["53"],"import React, { useRef } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport API from \"../../utils/API\";\nimport { ADD_POST, LOADING } from \"../../utils/actions\";\nimport {Container, Button, Form } from 'react-bootstrap';\n\n\n\n  const TheForm = () => {\n\n  const userRef = useRef();\n  const plantNameRef = useRef();\n  const locationRef = useRef();\n  const costRef = useRef();\n  const descriptionRef = useRef();\n  const [state, dispatch] = useStoreContext();\n  const fileInput = useRef(null);\n\n\n      // const handleImageUpload = event => {\n      //   event.preventDefault();\n      //   const data = new FormData();\n      //   data.append('image', fileInput.current.files[0]);\n      \n      //   const postImage = async () => {\n      //     try {\n      //       const res = await fetch('/api/file-upload', {\n      //         mode: 'cors',\n      //         method: 'POST',\n      //         body: data\n      //       })\n      //       if (!res.ok) throw new Error(res.statusText);\n      //       const postResponse = await res.json();\n      //       setFormState({...formState, image: postResponse.Location})\n      //       console.log(\"postImage: \", postResponse.Location)\n      //       return postResponse.Location;\n      //     } catch (error) {\n      //       console.log(error);\n      //     }\n      //   };\n      //   postImage();\n      // };\n\n                // submit form\n        const handleSubmit = e => {\n          e.preventDefault();\n          dispatch({ type: LOADING });\n          API.savePost({\n            username: userRef.current.value,\n            plantName: plantNameRef.current.value,\n            location: locationRef.current.value,\n            cost: costRef.current.value,\n            descriptionRef: descriptionRef.current.value,\n          })\n            .then(result => {\n              dispatch({\n                type: ADD_POST,\n                post: result.data\n              });\n            })\n            .catch(err => console.log(err));\n\n            console.log(userRef.current.value)\n            console.log(plantNameRef.current.value)\n            console.log(locationRef.current.value)\n            console.log(costRef.current.value)\n            console.log(descriptionRef.current.value)\n\n          userRef.current.value = \"\";\n          plantNameRef.current.value = \"\";\n          locationRef.current.value = \"\";\n          costRef.current.value = \"\";\n          descriptionRef.current.value = \"\";\n        };\n\n\n    return (\n      <Container>\n                <Form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleSubmit}>\n        <Form.Group >\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n            required\n            ref = {userRef}\n            placeholder = \"GreenTree7\"\n            />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant Name</Form.Label>\n            <Form.Control \n            required\n            ref = {plantNameRef}\n            placeholder=\"Eastern Redbud\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n            required\n            ref = {locationRef}\n            placeholder=\"Austin\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Plant/Seed Cost</Form.Label>\n            <Form.Control\n            required\n            ref = {costRef}\n            placeholder=\"$5\"\n             />\n            \n        </Form.Group>\n        <Form.Group >\n            <Form.Label>Description</Form.Label>\n            \n            \n\n      <Form.Control \n          required\n          ref = {descriptionRef}\n          placeholder=\"Description of your plant\"\n          className=\"form-input col-12 col-md-9\"\n          >\n      \n          \n        \n        </Form.Control>\n            \n        </Form.Group>\n        <Form.Group>\n        <label className=\"form-input col-12  p-1\">\n            Add an image of your plant: \n            <input\n              type=\"file\"\n              ref={fileInput}\n              className=\"form-input p-2\"\n            />\n            <button \n              className=\"btn\" \n              // onClick={} \n              type=\"submit\"\n            >\n              Upload\n            </button>\n          </label>\n        </Form.Group>\n\n        \n        <Button className=\"btn col-12 col-md-3\" type=\"submit\" >\n            Submit\n        </Button >\n        </Form>\n      </Container>\n        \n    )\n}\nexport default TheForm\n","/Users/devante/personalProjects/seeds/seed/client/src/components/TheJumbotron/index.js",["54"],"import React from 'react'\nimport { Jumbotron, Container, Carousel } from 'react-bootstrap';\nimport \"./index.css\"\n\n\nconst TheJumbotron = () => {\n    return (\n      <Container fluid>\n      <Carousel>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant1.jpg\"\n          alt=\"First slide\"\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant2.jpg\"\n          alt=\"Second slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Second slide label</h3>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant3.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant4.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"./images/plant5.jpg\"\n          alt=\"Third slide\"\n        />\n    \n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n    </Container>\n    )\n}\n\nexport default TheJumbotron","/Users/devante/personalProjects/seeds/seed/client/src/components/Header/index.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/components/PostsGrid/index.js",["55","56"],"import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport API from \"../../utils/API\";\nimport {Container, ListGroup } from 'react-bootstrap'\nimport {useStoreContext} from \"../../utils/GlobalState\"\nimport {  UPDATE_POSTS, LOADING } from \"../../utils/actions\";\n\n\nconst PostsGrid = () => {\n  const [state, dispatch] = useStoreContext();\n\n  // const removePost = id => {\n  //   API.deletePost(id)\n  //     .then(() => {\n  //       dispatch({\n  //         type: REMOVE_POST,\n  //         _id: id\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  const getPosts = () => {\n    dispatch({ type: LOADING });\n    API.getPosts()\n      .then(results => {\n        dispatch({\n          type: UPDATE_POSTS,\n          posts: results.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n\n    return (\n      <Container>\n        <ListGroup>\n          {state.posts.map(post => (\n            <ListGroup.Item key={post._id}>\n              <strong>\n                  {post.title} by {post.author}\n                </strong>\n                <p>{post.description}</p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        \n      </Container>\n\n    )\n  }\n\n\nexport default PostsGrid\n","/Users/devante/personalProjects/seeds/seed/client/src/utils/GlobalState.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/actions.js",[],"/Users/devante/personalProjects/seeds/seed/client/src/utils/API.js",["57"],"import axios from \"axios\";\n\nexport default {\n  // Gets all posts\n  getPosts: function() {\n    return axios.get(\"/api/users\");\n  },\n  // Gets the post with the given id\n  getPost: function(id) {\n    return axios.get(\"/api/users/\" + id);\n  },\n  // Deletes the post with the given id\n  deletePost: function(id) {\n    return axios.delete(\"/api/posts/\" + id);\n  },\n  // Saves a post to the database\n  savePost: function(postData) {\n    return axios.post(\"/api/users\", postData);\n  }\n};\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"67","line":6,"column":19,"nodeType":"64","messageId":"65","endLine":6,"endColumn":28},{"ruleId":"62","severity":1,"message":"68","line":16,"column":10,"nodeType":"64","messageId":"65","endLine":16,"endColumn":15},{"ruleId":"62","severity":1,"message":"69","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"62","severity":1,"message":"70","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":37,"column":6,"nodeType":"73","endLine":37,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":1,"nodeType":"77","endLine":20,"endColumn":3},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'state' is assigned a value but never used.","'Jumbotron' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["80"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [getPosts]",{"range":"83","text":"84"},[890,892],"[getPosts]"]